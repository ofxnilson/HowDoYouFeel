package mainServerClientGUI;
import generated.grpc.motivationalmessages.GratitudeEntryRequest;
import generated.grpc.motivationalmessages.GratitudeEntryResponse;
import generated.grpc.motivationalmessages.MotivationalMessagesGrpc.MotivationalMessagesStub;
import io.grpc.stub.StreamObserver;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/*
 * @author Nilson Francisco
 */
// Client-Stream: Gratitude, that get from the user many gratitudes messages, save one by one and them send them all when the user decides to 
public class Gratitude extends javax.swing.JDialog {
    private final List<String> gratitudeEntries = new ArrayList<>();
    private final int userId;
    private final generated.grpc.motivationalmessages.MotivationalMessagesGrpc.MotivationalMessagesStub motivationalStub;
    /**
     * Creates new form Gratitude
     */
    public Gratitude(java.awt.Frame parent, boolean modal, int userId, MotivationalMessagesStub motivationalStub){
        super(parent, modal);
        this.userId = userId;
        this.motivationalStub = motivationalStub;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        gratitudeText = new javax.swing.JTextArea();
        sendGrat = new javax.swing.JButton();
        clearText = new javax.swing.JButton();
        addGrat = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("sansserif", 3, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("How do you feel");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel2.setText("Be grateful for the litlte things...");

        gratitudeText.setColumns(20);
        gratitudeText.setRows(5);
        jScrollPane1.setViewportView(gratitudeText);

        sendGrat.setText("Send Gratitude");
        sendGrat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendGratActionPerformed(evt);
            }
        });

        clearText.setText("Clear");
        clearText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearTextActionPerformed(evt);
            }
        });

        addGrat.setText("Add Gratitude");
        addGrat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addGratActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(59, 59, 59))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(56, 56, 56))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addGrat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(clearText, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sendGrat, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sendGrat)
                    .addComponent(clearText)
                    .addComponent(addGrat))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    // Button to send all the gratitudes stored in the ArrayList
    private void sendGratActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendGratActionPerformed
        if (gratitudeEntries.isEmpty()){
        JOptionPane.showMessageDialog(this, "You have no gratitude entries to send.");
        }
        
        // Call the async stub RPC
        StreamObserver<GratitudeEntryRequest> requestObserver =
        motivationalStub.receiveGratitudeJournal(new StreamObserver<GratitudeEntryResponse>(){
            @Override
            public void onNext(GratitudeEntryResponse response){
                JOptionPane.showMessageDialog(Gratitude.this, "Server response:\n" + response.getMessage(), "Thank You", JOptionPane.INFORMATION_MESSAGE);
            }

            @Override
            public void onError(Throwable t){
                JOptionPane.showMessageDialog(Gratitude.this,
                    "Error sending gratitude entries: " + t.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }

            @Override
            public void onCompleted(){
                System.out.println("Gratitude submission completed.");
            }
        });
        
        // Save to .csv and send to server
        for (String entry : gratitudeEntries){
            String timestamp = java.time.LocalDateTime.now().toString();

            // Save to CSV file
            saveGratitudeToCsv(userId, entry, timestamp);

            // Send each entry
            GratitudeEntryRequest request = GratitudeEntryRequest.newBuilder().setUserId(userId).setGratitudeText(entry).setTimestamp(java.time.LocalDateTime.now().toString()).build();
                requestObserver.onNext(request);
        }

            // Complete the stream
            requestObserver.onCompleted();

            // Clear entries after sending
            gratitudeEntries.clear();
    }//GEN-LAST:event_sendGratActionPerformed

    private void clearTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearTextActionPerformed
        gratitudeText.setText("");
    }//GEN-LAST:event_clearTextActionPerformed

    // Button to add one gratitude
    private void addGratActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addGratActionPerformed
        String entry = gratitudeText.getText().trim();
        if (!entry.isEmpty()){
            gratitudeEntries.add(entry);
            gratitudeText.setText("");
            JOptionPane.showMessageDialog(this, "Entry added! Send when you're ready.");
        }
    }
    
    // Helper method to save the user input to the csv file
    private void saveGratitudeToCsv(int userId, String entry, String timestamp) {
        String filePath = "data/tracker/usersMoods.csv";
        File file = new File(filePath);
        try (FileWriter writer = new FileWriter(filePath, true)){
            if (file.length() == 0){
                writer.append("Date,UserID,Text,Sentiment,Confidence,TimeOfDay,Activity\n");
            }
            String date = java.time.LocalDate.now().toString();
            writer.append(String.format("\"%s\",\"%s\",\"%s\",\"%s\",%.2f,\"%s\",\"%s\"\n", date, userId, entry.replace("\"", "\"\""), "Gratitude", 1.00, "N/A", "Gratitude Entry"));
        } 
        catch (IOException e){
            JOptionPane.showMessageDialog(this, "Error saving gratitude to file: " + e.getMessage(), "File Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addGratActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addGrat;
    private javax.swing.JButton clearText;
    private javax.swing.JTextArea gratitudeText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton sendGrat;
    // End of variables declaration//GEN-END:variables
}
