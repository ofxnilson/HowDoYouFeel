syntax = "proto3";

option java_multiple_files = true;
option java_package = "generated.grpc.sentimentanalysis";
option java_outer_classname = "SentimentServiceImpl";
import "google/protobuf/timestamp.proto";

package HowDoYouFeel;

    // Service definition for analyzing user sentiment and provide chatbot
service SentimentService{
        // Analyzes the sentiment on the typed text
    rpc AnalyseSentiment (SentimentRequest) returns (SentimentResponse);
        // Saves the sentiment input for tracking to the week report
    rpc SaveSentiment (SentimentRequest) returns (SaveSentimentResponse); 
        // Return the weekly sentiment report
    rpc GetWeeklyReport (WeeklyReportRequest) returns (WeeklyReportResponse); 
        // Bi-directional streaming for chatbot interaction that will simulate a human
    rpc ChatWithBot (stream ChatRequest) returns (stream ChatResponse); 
}

    // Message for requesting sentiment analysis
message SentimentRequest{
    string user_id = 1; // Associate the sentiment to an user ID
    string text = 2; // The text input from the user
    string time_of_day = 3; // The time of day when the sentiment was recorded (Morning, Afternoon, Night)
    string activity = 4; // To get wat happened to the uer that changed his mood
}

    // Message for returning sentiment analysis results
message SentimentResponse{
    string sentiment = 1; // Detected sentiment (positive, negative or neutral)
    float confidence = 2; // Confidence score of the sentiment analysis
}

    // Message for confirming the saving of a sentiment entry
message SaveSentimentResponse{
    string message = 1; 
}

    // Message for requesting the weekly sentiment report based on user ID
message WeeklyReportRequest{
    string user_id = 1; 
}

    // Message for returning the weekly sentiment report
message WeeklyReportResponse{
    repeated SentimentEntry entries = 1;
}

    // Message representing an specific sentiment entry
message SentimentEntry{
    string date = 1; // The date when the sentiment was recorded
    string time_of_day = 2; // The time of day when the sentiment was recorded (Morning, Afternoon, Night)
    string sentiment = 3; // The detected sentiment (positive, negative or neutral)
}

    // Message for sending user input to the chatbot
message ChatRequest{
    string user_id = 1; // ID to identify the user
    string message = 2; // User's message to the chatbot
}

    // Message for chatbot responses
message ChatResponse{
    string response = 1; // Chatbot's response message
}



